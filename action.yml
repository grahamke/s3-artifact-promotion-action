name: Promote Artifact to S3
description: Upload an artifact to S3 and manage archive and latest versions.
inputs:
  app_name:
    required: true
    description: Name of the application
  version:
    required: true
    description: Version string for the artifact
  artifact_path:
    required: true
    description: Path to the artifact file
  bucket_name:
    required: true
    description: S3 bucket to upload to
  aws_region:
    required: true
    description: AWS region for the bucket
  role_to_assume:
    required: true
    description: IAM role ARN to assume via GitHub OIDC
runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ inputs.role_to_assume }}
        aws-region: ${{ inputs.aws_region }}

    - name: Promote artifact to S3
      run: |
        set -euo pipefail

        APP_NAME="${{ inputs.app_name }}"
        VERSION="${{ inputs.version }}"
        ARTIFACT_PATH="${{ inputs.artifact_path }}"
        BUCKET_NAME="${{ inputs.bucket_name }}"

        LATEST_FILENAME="${APP_NAME}-${VERSION}.zip"
        LATEST_KEY="s3://${BUCKET_NAME}/${APP_NAME}/latest/${LATEST_FILENAME}"
        ARCHIVE_DIR="s3://${BUCKET_NAME}/archive/${APP_NAME}

        echo "üîç Checking for existing latest artifact..."
        EXISTING=$(aws s3 ls "s3://${BUCKET_NAME}/${APP_NAME}/latest/" | awk '{print $4}' | head -n 1 || true)

        if [[ -n "$EXISTING" ]]; then
          echo "üì¶ Archiving existing latest: $EXISTING"
          aws s3 mv "s3://${BUCKET_NAME}/${APP_NAME}/latest/${EXISTING}"                     "${ARCHIVE_DIR}/${EXISTING}"
        else
          echo "‚ÑπÔ∏è No existing latest artifact found. Skipping archive."
        fi

        echo "‚¨ÜÔ∏è Uploading new latest: ${LATEST_FILENAME}"
        aws s3 cp "${ARTIFACT_PATH}" "${LATEST_KEY}"

        echo "‚úÖ Promotion complete."
      shell: bash
